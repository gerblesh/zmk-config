// vi:ft=c

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>


// default behavior configs
&mmv {
    acceleration-exponent = <1>;      // 1
    time-to-max-speed-ms = <500>;    // 40
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <40>;      // 500
};

&lt {
    tapping-term-ms = <150>;
    flavor = "hold-preferred";
    quick-tap-ms = <100>;
};

/ {
    combos {
        compatible = "zmk,combos";

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 20>;
            layers = <0 1 2 3>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <19 22>;
            layers = <0 1 2 3>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions= <14 16>;
            layers = <0 1 2 3>;
        };

        ctrl_enter {
            bindings = <&kp ENTER>;
            key-positions = <21 22>;
            layers = <1>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <19 21>;
            layers = <0 1 2 3>;
        };

        mouse_combo {
            bindings = <&to 7>;
            key-positions = <16 19>;
            layers = <0 2 3 1>;
        };

        esc_mouse {
            bindings = <&to 0>;
            key-positions = <19 21>;
            layers = <7>;
        };

        gaming {
            bindings = <&to 4>;
            key-positions = <24 25>;
            layers = <0>;
        };
    };

    behaviors {
        shift_space: shift_space {
            compatible = "zmk,behavior-hold-tap";
            // label = "SHIFT_SPACE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
        };

        dt_ctrl_shift: dt_ctrl_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_CTRL_SHIFT";
            #binding-cells = <0>;
            bindings = <&mt LCTRL LALT>, <&kp LC(LEFT_SHIFT)>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <36 37 38 39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <36 37 38 39 40 41 30 18 6 7 19 8 9 10 20 21 22 32 33 34 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        dt_boot_reset: dt_boot_reset {
            compatible = "zmk,behavior-tap-dance";
            // label = "DT_BOOT_RESET";
            #binding-cells = <0>;
            bindings = <&bootloader>, <&sys_reset>;
        };

        dt_tab_alt: dt_tab_alt {
            compatible = "zmk,behavior-tap-dance";
            // label = "DT_TAB_ALT";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp LALT>;
        };
    };

    macros {
        nerd_emoji: nerd_emoji {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(LC(U)) &kp N1 &kp F &kp N9 &kp N1 &kp N3 &kp SPACE>;
            label = "NERD_EMOJI";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp NUMBER_6  &kp Q  &kp W        &kp E         &kp R        &kp T        &kp Y                   &kp U            &kp I         &kp O        &kp P           &nerd_emoji
&kp MINUS     &kp A  &hml LALT S  &hml LCTRL D  &hml LGUI F  &kp G        &kp H                   &hmr RGUI J      &hmr RCTRL K  &hmr RALT L  &kp APOSTROPHE  &kp UNDERSCORE
&kp PLUS      &kp Z  &kp X        &kp C         &kp V        &kp B        &kp N                   &kp M            &kp COMMA     &kp DOT      &kp FSLH        &kp EQUALS
                                  &kp TAB       &mo 1        &kp SPACE    &sk RIGHT_SHIFT         &lt 2 BACKSPACE  &key_repeat
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Nav";
            bindings = <
&trans  &trans         &kp N7  &kp N8  &kp N9  &trans            &kp PLUS   &kp GREATER_THAN      &LESS_THAN             &trans          &trans       &trans
&trans  &kp N0         &kp N4  &kp N5  &kp N6  &kp EQUALS         &kp LEFT   &hmr RGUI DOWN        &hmr RCTRL UP          &hmr RALT RIGHT  &kp DELETE  &trans
&trans  &kp LC(SHIFT)  &kp N1  &kp N2  &kp N3  &kp UNDERSCORE    &kp MINUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans           &trans      &trans
                        &trans  &trans  &trans                   &trans    &trans          &trans
            >;
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Sym";
            bindings = <
&trans  &trans           &kp PIPE       &kp LESS_THAN          &kp GREATER_THAN       &kp PRCNT    &trans            &kp LEFT_BRACKET            &kp RIGHT_BRACKET             &kp GRAVE      &trans     &trans
&trans  &kp EXCLAMATION  &kp AT         &hml LCTRL LEFT_BRACE  &hml LGUI RIGHT_BRACE  &kp TILDE    &kp KP_MULTIPLY   &hmr RGUI LEFT_PARENTHESIS  &hmr RCTRL RIGHT_PARENTHESIS  &kp AMPERSAND  &kp COLON  &trans
&trans  &trans           &kp BACKSLASH  &kp POUND              &kp DOLLAR             &trans       &trans            &trans                      &trans                        &kp CARET      &trans     &trans
                                        &trans                 &trans                 &trans       &mt RSHIFT ENTER  &trans                      &trans
            >;
        };

        fun {
            display-name = "Fun";
            bindings = <
&trans      &kp F1        &kp F2        &kp F3        &kp F4                &kp F5                &kp F6                &kp F7            &kp F8      &kp F9     &kp F10  &trans
&to 6       &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_PREVIOUS        &kp C_PLAY_PAUSE  &kp C_NEXT  &trans     &kp F11  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4          &out OUT_TOG          &kp INS           &kp PG_DN   &kp PG_UP  &kp F12  &trans
                                        &trans        &trans                &trans                &mt RSHIFT RS(ENTER)  &trans            &trans
            >;
        };

        game {
            display-name = "Game";
            bindings = <
&kp ESC    &trans  &trans  &trans       &trans  &trans       &trans     &trans    &kp UP    &trans     &trans  &trans
&kp LCTRL  &kp A   &kp S   &kp D        &kp F   &trans       &trans     &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &trans  &trans       &trans  &trans       &trans     &trans    &trans    &trans     &trans  &trans
                           &dt_tab_alt  &sl 5   &kp SPACE    &kp ENTER  &trans    &trans
            >;

            label = "Game";
        };

        game_plus {
            display-name = "Game+";
            bindings = <
&to 0         &kp NUMBER_1   &kp N2       &kp N3        &kp N4        &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&kp N0        &trans         &trans       &trans        &kp N6        &kp H     &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_9  &kp PAGE_DOWN  &kp PAGE_UP  &kp NUMBER_8  &kp NUMBER_7  &kp N     &trans  &trans  &trans  &trans  &trans  &trans
                                          &kp F1        &kp F2        &kp F3    &trans  &trans  &trans
            >;

            label = "Game+";
        };

        game_full {
            bindings = <
&kp ESC    &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans    &trans
&kp LALT   &kp A   &kp S   &kp D   &kp F   &trans    &kp H   &kp J   &kp K   &kp L   &kp APOS  &trans
&kp LSHFT  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans    &to 0
                           &trans  &sl 5   &trans    &trans  &trans  &trans
            >;

            label = "GameFull";
        };

        mouse {
            bindings = <
&trans  &trans      &trans    &trans     &trans    &trans    &trans          &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans           &trans
&trans  &kp LSHIFT  &kp LALT  &kp LCTRL  &kp LGUI  &trans    &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT  &trans
&trans  &trans      &trans    &trans     &trans    &trans    &trans          &trans          &trans          &trans           &trans           &trans
                              &trans     &trans    &trans    &mkp LCLK       &mkp RCLK       &mkp MCLK
            >;

            label = "Mouse";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        function {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
