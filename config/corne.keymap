// vi:ft=c
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <150>;
    flavor = "hold-preferred";
    quick-tap-ms = <100>;
};

/ {
    combos {
        compatible = "zmk,combos";

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 26>;
            layers = <0 1 2 3>;
        };

        pasteformat {
            bindings = <&kp LS(LC(V))>;
            key-positions = <26 28 27>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <26 28>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <33 32>;
            layers = <0 1 2 3>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <19 21>;
            layers = <0 1 2 3>;
        };
    };

    behaviors {
        shift_space: shift_space {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_SPACE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
        };

        dt_ctrl_shift: dt_ctrl_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_CTRL_SHIFT";
            #binding-cells = <0>;
            bindings = <&mt LCTRL LALT>, <&kp LC(LEFT_SHIFT)>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <36 37 38 39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <36 37 38 39 40 41 30 18 6 7 19 8 9 10 20 21 22 32 33 34 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&to 4               &kp Q  &kp W  &kp E         &kp R        &kp T        &kp Y                   &kp U            &kp I         &kp O    &kp P           &caps_word
&mt LEFT_ALT MINUS  &kp A  &kp S  &hml LCTRL D  &hml LGUI F  &kp G        &kp H                   &hmr RGUI J      &hmr RCTRL K  &kp L    &kp APOSTROPHE  &kp UNDERSCORE
&kp PLUS            &kp Z  &kp X  &kp C         &kp V        &kp B        &kp N                   &kp M            &kp COMMA     &kp DOT  &kp FSLH        &kp EQUAL
                                  &kp TAB       &lt 1 LC(B)  &kp SPACE    &mt RIGHT_SHIFT RETURN  &lt 2 BACKSPACE  &kp RALT
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Nav";
            bindings = <
&trans  &kp N1        &kp N2           &kp N3      &kp N4                &kp N5                  &kp N6          &kp N7            &kp N8      &kp N9     &kp N0           &trans
&trans  &trans        &trans           &kp LCTRL   &kp LC(LSHIFT)        &kp C_BRIGHTNESS_INC    &kp LEFT        &kp DOWN          &kp UP      &kp RIGHT  &kp DELETE       &trans
&trans  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_MUTE  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans     &kp RIGHT_SHIFT  &trans
                                       &trans      &trans                &trans                  &trans          &trans            &trans
            >;
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Sym";
            bindings = <
&trans  &kp EXCL  &kp AT     &kp LESS_THAN   &kp GREATER_THAN  &kp PRCNT    &kp CARET        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE          &trans            &trans
&trans  &kp PLUS  &kp EQUAL  &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp MINUS    &kp KP_MULTIPLY  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND      &kp COLON         &trans
&trans  &trans    &trans     &kp POUND       &kp DOLLAR        &trans       &kp TILDE        &kp BACKSLASH         &kp PIPE               &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans
                             &trans          &trans            &trans       &trans           &trans                &trans
            >;
        };

        fun {
            display-name = "Fun";
            bindings = <
&trans      &kp F1        &kp F2        &kp F3         &kp F4        &kp F5          &kp F6        &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&to 4       &kp F12       &kp PAGE_UP   &kp PAGE_DOWN  &trans        &trans          &trans        &trans  &trans  &trans  &trans   &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4    &out OUT_TOG  &trans  &trans  &trans  &trans   &trans
                                        &trans         &trans        &trans          &trans        &trans  &trans
            >;
        };

        game {
            display-name = "Game";
            bindings = <
&kp ESC    &trans  &trans  &trans   &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&kp LALT   &kp A   &kp S   &kp D    &kp F   &trans       &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &trans  &trans  &trans   &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                           &kp TAB  &sl 5   &kp SPACE    &to 0   &trans  &trans
            >;
        };

        game+ {
            display-name = "Game+";
            bindings = <
&to 0  &kp Y          &trans       &kp NUMBER_4  &kp NUMBER_6  &kp N5          &trans  &trans  &trans  &trans  &trans  &trans
&kp H  &trans         &trans       &trans        &kp N6        &kp N7          &trans  &trans  &trans  &trans  &trans  &trans
&kp N  &kp PAGE_DOWN  &kp PAGE_UP  &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        function {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
